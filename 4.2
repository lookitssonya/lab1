#include <iostream>
using namespace std;
// Определяем структуру Node, представляющую собой элемент списка
struct Node {
    int data;
    Node* next;
};
//Объявляем класс, представляющий собой односвязный список
class LinkedList {
private:
    Node* head;
public:
    LinkedList() : head(nullptr) {} // Устанавливаем начало списка
    void insert(int value) { // Вставка нового элемента
        Node* newNode = new Node;
        newNode->data = value;
        newNode->next = nullptr;
        if (head == nullptr) {
            head = newNode;
        }
        else {
            Node* current = head;
            while (current->next != nullptr) {
                current = current->next;
            }
            current->next = newNode;
        }
    }
// Удаление последних двух элементов
    void removeLastTwo() {
        if (head == nullptr || head->next == nullptr) {
            // Пустой список или список из одного элемента
            head = nullptr;
        }
        else {
            Node* current = head;
            Node* prev = nullptr;
            while (current->next->next != nullptr) {
                prev = current;
                current = current->next;
            }
            prev->next = nullptr;
            delete current->next;
            delete current;
        }
    }
// Вывод списка на экран
    void printList() {
        Node* current = head;
        while (current != nullptr) {
            cout << current->data << " ";
            current = current->next;
        }
        cout << endl;
    }
};

int main() {
    setlocale(LC_ALL, "Russian");
    LinkedList list;
    int input;
    cout << "Введите целые числа (для завершения введите 0):" << endl;
    do {
        cin >> input;
        if (input != 0) {
            list.insert(input); // Добавляем введенные значения в список
        }
    } while (input != 0);
    list.removeLastTwo(); // Удаляем последние 2 значения
    cout << "Список после удаления двух последних элементов: ";
    list.printList(); // Выводим список
    return 0;
}

